apiVersion: v1
kind: ServiceAccount
metadata:
  name: flagger
  namespace: istio-system
  labels:
    app: flagger
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: flagger
  labels:
    app: flagger
rules:
- apiGroups:
  - ""
  resources:
  - events
  - configmaps
  - configmaps/finalizers
  - secrets
  - secrets/finalizers
  - services
  - services/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - daemonsets
  - daemonsets/finalizers
  - deployments
  - deployments/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  - horizontalpodautoscalers/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - flagger.app
  resources:
  - canaries
  - canaries/status
  - metrictemplates
  - metrictemplates/status
  - alertproviders
  - alertproviders/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  - virtualservices/finalizers
  - destinationrules
  - destinationrules/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - appmesh.k8s.aws
  resources:
  - virtualnodes
  - virtualnodes/finalizers
  - virtualrouters
  - virtualrouters/finalizers
  - virtualservices
  - virtualservices/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - split.smi-spec.io
  resources:
  - trafficsplits
  - trafficsplits/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - specs.smi-spec.io
  resources:
  - httproutegroups
  - httproutegroups/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - gloo.solo.io
  resources:
  - upstreams
  - upstreams/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - gateway.solo.io
  resources:
  - routetables
  - routetables/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - projectcontour.io
  resources:
  - httpproxies
  - httpproxies/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- nonResourceURLs:
  - /version
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: flagger
  labels:
    app: flagger
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flagger
subjects:
- kind: ServiceAccount
  name: flagger
  namespace: istio-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flagger
  namespace: istio-system
  labels:
    app: flagger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flagger
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: flagger
    spec:
      containers:
      - args:
        - -log-level=info
        - -include-label-prefix=app.kubernetes.io
        - -mesh-provider=istio
        - -metrics-server=http://prometheus:9090
        image: ghcr.io/fluxcd/flagger:1.6.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - wget
            - --quiet
            - --tries=1
            - --timeout=2
            - --spider
            - http://localhost:8080/healthz
          timeoutSeconds: 5
        name: flagger
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          exec:
            command:
            - wget
            - --quiet
            - --tries=1
            - --timeout=2
            - --spider
            - http://localhost:8080/healthz
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 32Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 10001
      serviceAccountName: flagger
